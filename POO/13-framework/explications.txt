Arborescence :

app/ : La configuration de l'appliction
src/ : Le code PHP et HTML spécifique à notre projet
vendor/ : code générale (coeur)) de l'application et les entités.
web/ : Repertoire web racine . Le point d'entrée de notre application (index.php, img/ photo/ js/ css/ font/) (assets)

-------------------------------------------------------------

Nature des différents fichiers :

app/
    Config/
        parameters.php :
        Contient tout les informations de connexion à la BDD... et autres paramètres...

    Config.php:
    Contient l'inclusion des params de connexion à la BDD, et les retourne dans une méthode getParametersConnect()

vendor/
    autoload.php :
    Permet d'inclure les bons fichiers lors d'un 'new' (instanciation)
    Attention : seuls les controller sont dans le dossier SRC, il faut donc préciser que si le namespace n'est pas 'Controller' alors les fichiers sont dans vendor.
    Autre subtilité: Le controller général (Controller\Controller) est également dans vendor.

    Entity/
        Produit.php, Membre.php, Commande.php
        Classes qui contiennent toutes les propriétés (private) de nos entités et getters et les setters. POPO (Plain Old PHP Object)

web/
    index.php :
    Clé d'entrée de notre application (SILEX : index.php / Symfony app.php).

vendor/
    Manager/
        PDOManager.php
        Cette classe représente la connexion à la BDD. Elle contient et nous retourne notre objet PDO grâce auquel nous pourrons effectuer des requêtes.
        Cette classe est un Singleton (singlette). Cela signifie qu'il ne peut y avoir qu'un seul objet issu de cette classe.

        EntityRepository.php :
        Un repository centralise tout ce qui touche à la bdd et la récuération des entités. Concrètement il ne doit pas y avoir de requête SQL ailleurs que dans un repository.
        Si une entité à besoin de requêtes spécifique (exemple : jointure) dans ce cas les requêtes seront codées directement dans le repository en question.
    
    Repository/
        ProduitRepository.php :

        Ce fichier contiendra toutes les fonctions liée à l'entité produit, demandera à EntityRepository de faire certaines requêtes.
        Et si l'entitéé a besoin de requêtes spécifique, elles seront codées ici.

    Controller/
        Controller.php
        C'est le controleur général de l'application. Il a deux missions:

            1/ Récupérer le repository correspondant à l'entité dans laquelle je suis: getRepository()
            2/ Affiche la vue correspondant à l'action : render()

    src/
        Controller/
            ProduitController.php :
            Cette classe hérite du controleur général de l'application et permet de déclacher toutes les actions spécifique à l'entité produit.

    View/
        Produit/
        fiche_produit.php, boutique.php, categorie.php


        layout.html :
        Le layout représente la page générale, le template de base.
        Il peut y avoir plusieurs layout s'il y a plusieurs structures de pages dans notre application (home, contact, mentions légales, inscription...)